//
//  PhotoViewController.swift
//  BeBlue
//
//  Created by Marcio Habigzang Brufatto on 04/07/19.
//  Copyright (c) 2019 Marcio Habigzang Brufatto. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PhotoDisplayLogic: class {
    func displayInitialData(viewModel: PhotoScene.Load.ViewModel)
}

class PhotoViewController: UIViewController, PhotoDisplayLogic {
    var interactor: PhotoBusinessLogic?
    var router: (NSObjectProtocol & PhotoRoutingLogic & PhotoDataPassing)?
    
    let photoView = PhotoCollectionView()
    var arrayPhotos = [Photo]()
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = PhotoInteractor()
        let presenter = PhotoPresenter()
        let router = PhotoRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    override func loadView() {
        view = photoView
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        title = "Photos"
        photoView.collectionView.register(PhotoCell.self, forCellWithReuseIdentifier: PhotoCell.cellIdentifier)
        
        photoView.collectionView.dataSource = self
        photoView.collectionView.delegate = self
    
        loadInitialData()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func loadInitialData() {
        let request = PhotoScene.Load.Request()
        interactor?.doLoadInitialData(request: request)
    }
    
    func displayInitialData(viewModel: PhotoScene.Load.ViewModel) {
        arrayPhotos = viewModel.photos
        photoView.collectionView.reloadData()
    }
}

extension PhotoViewController: UICollectionViewDataSource {
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return arrayPhotos.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        
        if let cell = collectionView.dequeueReusableCell(withReuseIdentifier: PhotoCell.cellIdentifier, for: indexPath) as? PhotoCell {
            
            let photo = arrayPhotos[indexPath.row]
            
            cell.getImage(urlPhoto: photo.urlPhoto)
            
            print(photo)
            
            return cell
        } else {
            return UICollectionViewCell()
        }
    }
    
}

extension PhotoViewController: UICollectionViewDelegateFlowLayout {
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        return CGSize(width: (UIScreen.main.bounds.width/2) - 10, height: (UIScreen.main.bounds.width/2) - 10)
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, insetForSectionAt section: Int) -> UIEdgeInsets {
        
        return UIEdgeInsets(top: 5, left: 5, bottom: 5, right: 5)
    }
}
